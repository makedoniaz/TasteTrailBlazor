@inject IHttpClientFactory HttpClientFactory
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider authenticationStateProvider
@inject IUserService IUserService

@code {
    private bool IsAuthenticated = false;
    private bool IsAdmin = false;
    private string Name = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            if (authenticationStateProvider is JwtAuthenticationStateProvider jwtProvider)
            {
                var authState = await jwtProvider.GetAuthenticationStateAsync();
                var user = authState.User;

                IsAuthenticated = user!.Identity!.IsAuthenticated;

                if (IsAuthenticated)
                {
                    Name = user!.Identity!.Name!;
                    var userId = user!.FindFirst(ClaimTypes.NameIdentifier)!.Value;
                    await CheckAdminRoleAsync(userId!);
                }
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Exception message: {ex.Message}");
        }
    }

    private async Task CheckAdminRoleAsync(string userId)
    {
        try
        {
            if (userId != null)
            {
                var user = await IUserService.GetUserRolesAsync(userId);

                if (user != null && user.Roles != null && user.Roles.Contains("Admin"))
                {
                    IsAdmin = true;
                }
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Exception message: {ex.Message}");
            NavigationManager.NavigateTo($"/Login", true);
        }
    }

    private async Task LogoutAsync()
    {
        try
        {
            if (authenticationStateProvider is JwtAuthenticationStateProvider jwtProvider)
            {
                await jwtProvider.LogoutAsync();
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Exception message: {ex.Message}");
        }
    }
}


<header class="header">
    <nav>
        <div class="nav_header">
            <div class="nav_logo">
                <a href="/">
                    <img src="../Assets/logo-dark.png" alt="logo" class="nav_logo-dark" />
                </a>
            </div>
            <div class="nav_menu_btn" id="menu-btn">
                <i class="ri-menu-line"></i>
            </div>
        </div>
        <ul class="nav_links" id="nav-links">
            <li> <a class="nav-links" href="/">Home</a> </li>
            <li><a class="nav-links" href="#special">Special</a></li>
            <li><a class="nav-links" href="#menu">Menu</a></li>
            <li><a class="nav-links" href="#contact">Contact Us</a></li>

            @if (IsAdmin)
            {
                <li><a class="nav-link" href="/Dashboard">Dashboard</a></li>
            }
            <li class="nav-links dropdown">
                <a class="nav-links dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown"
                    aria-expanded="false">Services</a>
                <ul class="dropdown-menu dropdown-menu-end">
                    <li class="nav-links">
                        <a class="nav-link" href="/Venue">Venues</a>
                    </li>
                    @* <li class="nav-links">
                    <a class="nav-link" href="/Menu">Menu Page</a>
                    </li>
                    <li class="nav-links">
                    <a class="nav-link" href="/MenuItem">Menu Item Page</a>
                    </li> *@
                </ul>
            </li>

            @if (IsAuthenticated)
            {
                <li class="nav-links dropdown">
                    <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown"
                        aria-expanded="false"> Hello, @Name
                    </a>
                    <ul class="dropdown-menu dropdown-menu-end">
                        <li><a class="dropdown-item" href="/Profile">Account</a></li>
                        <li>
                            <hr class="dropdown-divider">
                        </li>
                        <li> <a class="dropdown-item" @onclick="() => LogoutAsync()">Log Out</a></li>
                    </ul>
                </li>
            }
            else
            {
                <li><i class="fa fa-solid fa-user mr-2"></i><a class="nav-links" href="Login"> Sign Up</a></li>
            }

        </ul>
    </nav>
</header>
