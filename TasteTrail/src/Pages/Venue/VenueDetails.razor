@page "/Venue/{Id:int?}"
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IHttpClientFactory HttpClientFactory
@inject NavigationManager UriHelper
@inject HttpClient Http
@inject ILocalStorageService localStorageService
@inject IVenueService IVenueService
@inject IMenuService IMenuService
@inject IFeedbackService IFeedbackService

<PageTitle>Venue Details</PageTitle>

@code {
    Map.LoadParameters parameters = new Map.LoadParameters()
        {
            location = new Map.Location()
            {
                longitude = 26.097133,
                latitude = 44.446165
            },
            zoom_level = 12
        };
    int pageNumber = 1;
    int pageSize = 10;
    public class VenueViewModel
    {
        public Venue? Venue { get; set; }
        public MenuDto? Menus { get; set; } = new MenuDto();
        public FeedbackDto? Feedbacks { get; set; } = new FeedbackDto();
        public double Latitude { get; set; } = 40.3820624;
        public double Longitude { get; set; } = 49.877007;
    }

    private FilterType selectedFilter = FilterType.MostLiked;

    [Parameter]
    public int Id { get; set; }

    private VenueViewModel Model = new VenueViewModel();
    private void GoToDetails(int Id)
    {
        UriHelper.NavigateTo($"/Menu/{Id}");
    }

    protected async override Task OnInitializedAsync()
    {
        await LoadVenueData();
    }

    private async Task LoadVenueData()
    {
        try
        {
            Model.Venue = await IVenueService.GetVenueByIdAsync(Id);

            Model.Menus = await IMenuService.GetFilteredMenusAsync(Id, pageNumber, pageSize);

            Model.Feedbacks = await IFeedbackService.GetFilteredFeedbacksAsync(Id, selectedFilter, pageNumber, pageSize);

        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading data: {ex.Message}");
        }
    }
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-4">
            <!-- Slideshow -->
            <div id="photoSlideshow" class="carousel slide" data-bs-ride="carousel">
                <div class="carousel-inner">
                    <div class="carousel-item active">
                        <img src="@Model!.Venue!.LogoUrlPath" class="d-block w-100" alt="Venue Photo">
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-8">
            <h1 class="mb-3">@Model!.Venue!.Name</h1>
            <!-- Rating -->
            <div class="rating" data-rating="@Model!.Venue.Rating">
                <span class="text-warning">
                    @for (var i = 0; i < (Model!.Venue.Rating); i++)
                    {
                        <i class="fas fa-star star"></i>
                    }
                    @if (Model!.Venue.Rating < 5)
                    {
                        for (var j = (Model!.Venue.Rating); j < 5; j++)
                        {
                            <i class="far fa-star star"></i>
                        }
                    }
                </span>
                <span class="badge bg-secondary ms-2">@Model.Venue.Rating</span>
            </div>
            <!-- Description -->
            <p class="mt-3"><strong>Description: </strong>@Model!.Venue.Description</p>
            <p class="mt-3"><strong>Email: </strong>@Model!.Venue.Email</p>
            <p class="mt-3"><strong>Address: </strong>@Model!.Venue.Address</p>
            <p class="mt-3"><strong>Contact Number: </strong>@Model!.Venue.ContactNumber</p>
            <p class="mt-3"><strong>Average Price: </strong>@Model!.Venue.AveragePrice</p>

        </div>
    </div>
    @* <hr class="mt-5"> *@
    <div class="row mt-5">
        @if (Model.Menus != null && Model.Menus.Entities != null)
        {
            @foreach (var menu in Model!.Menus.Entities)
            {
                <div class="menu">
                    <a style="text-decoration:none; color: inherit;" @onclick="() => GoToDetails(menu.Id)">
                        <div class="menu-head">
                            <h1>@menu.Name</h1>
                            <p class="established">@menu.Description</p>
                        </div>
                        <hr />
                        @* @foreach (var menuItems in menu.MenuItems)
                {
                <section>
                <h2>Header</h2>
                <article class="item">
                <p class="flavor">@menuItems.Name</p>
                <p class="price">150</p>
                </article>
                </section>
                } *@
                    </a>
                </div>
            }
        }
    </div>

    <!-- Location Section -->
    <div class="mt-5">
        <h2>Location</h2>
        <Map width="600px" height="600px" Parameters="@parameters"></Map>
    </div>

    <!-- Feedback Section -->
    <div class="mt-5">
        <h2>Reviews</h2>
        <div class="list-group" style="position: relative;">
            @foreach (var feedback in Model!.Feedbacks!.Entities)
            {
                <div class="list-group-item d-flex align-items-start">
                    <img src="/images/user.png" class="rounded-circle me-3" alt="Alice's logo" style="width: 50px;">
                    <div>
                        <h5 class="mb-1">@feedback.Username</h5>
                        <div class="rating" data-rating="feedback.Rating">
                            <span class="text-warning">
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                            </span>
                            <span class="badge bg-secondary ms-2">@feedback.Rating</span>
                        </div>
                        <p class="mb-1">@feedback.Text
                        </p>
                        <small class="text-muted">Posted on feedback.CreationDate</small>

                        <div class="mt-2">
                            <button type="button" class="btn btn-sm btn-outline-secondary edit-feedback">Edit <i
                                    class="fas fa-pencil-alt"></i></button>
                        </div>

                    </div>
                </div>
            }
            <button type="button" class="btn btn-primary btn-lg rounded-circle" id="addFeedbackBtn"
                style="position: absolute; bottom: -10px; right: -15px;"><i class="fas fa-plus"></i> </button>
        </div>

    </div>

    <div class="mt-5" id="commentFormSection" style="display: none;">
        <h2>Add/Edit Comment</h2>
        <form id="commentForm">
            <div class="mb-3">
                <label for="commentName" class="form-label">Name</label>
                <input type="text" class="form-control" id="commentName" required>
            </div>
            <div class="mb-3">
                <label for="commentRating" class="form-label">Rating</label>
                <select class="form-select" id="commentRating" required>
                    <option value="">Select Rating</option>
                    <option value="5">5 Stars</option>
                    <option value="4">4 Stars</option>
                    <option value="3">3 Stars</option>
                    <option value="2">2 Stars</option>
                    <option value="1">1 Star</option>
                </select>
            </div>
            <div class="mb-3">
                <label for="commentMessage" class="form-label">Comment</label>
                <textarea class="form-control" id="commentMessage" rows="3" required></textarea>
            </div>
            <button type="submit" class="btn btn-primary">Submit Comment</button>
        </form>
    </div>
</div>

<style>
    #map {
        height: 100vh;
    }

    .leaflet-popup-content-wrapper {
        width: 100%;
    }
</style>
<link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
<script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>



<style>
    .container {
        margin-bottom: 250px;
    }

    .menu-head h1 {
        font-size: 34px;
        margin-top: 0;
        margin-bottom: 15px;
    }

    .menu h2 {
        font-size: 26px;
    }

    .menu .established {
        font-style: italic;
    }

    .menu h1,
    .menu h2,
    .menu p {
        text-align: center;
    }

    .menu {
        background-color: burlywood;
        margin-left: 1rem;
        margin-right: 1rem;
        padding: 20px 10px 30px 10px;
        max-width: 470px;
        border-radius: 2%;
    }

    .menu hr {
        height: 2px;
        background-color: brown;
        border-color: brown;
    }

    .menu h1,
    .menu h2 {
        font-family: Impact, serif;
    }

    .menu .item p {
        display: inline-block;
        margin-top: 5px;
        margin-bottom: 5px;
        font-size: 18px;
    }

    .menu .flavor,
    .menu .dessert {
        text-align: left;
        width: 75%;
    }

    .menu .price {
        text-align: right;
        width: 24%;
    }
</style>