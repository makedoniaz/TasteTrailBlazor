@page "/VenueCreate"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IHttpClientFactory HttpClientFactory
@inject ILocalStorageService localStorageService
@inject AuthenticationStateProvider authenticationStateProvider
@inject IVenueService IVenueService

@layout DashBoardLayout

<PageTitle>Create Venue</PageTitle>

@code {
    private Venue venue = new Venue();
    private IBrowserFile? selectedLogo;

    private async Task CreateVenueAsync()
    {
        if (authenticationStateProvider is JwtAuthenticationStateProvider jwtProvider)
        {
            var authState = await jwtProvider.GetAuthenticationStateAsync();
            var user = authState.User;

            var isAuthenticated = user.Identity.IsAuthenticated && user.IsInRole("Admin");

            if (!isAuthenticated)
            {
                NavigationManager.NavigateTo("/");
                return;
            }

            try
            {
                if (selectedLogo != null)
                { 
                    bool uploadSuccess = await IVenueService.UploadVenueLogoAsync(venue.Id, selectedLogo);
                    if (!uploadSuccess)
                    {
                        Console.WriteLine($"Error upload Logos: {uploadSuccess}");
                    }
                }

                bool result = await IVenueService.CreateVenueAsync(venue);
                if (result)
                {
                    NavigationManager.NavigateTo("/DashboardVenues");
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error loading venues: {ex.Message}");
            } 
        }


    }

    private void OnLogoSelected(InputFileChangeEventArgs e)
    {
        selectedLogo = e.File;
    }
}

<div class="container h-100 mb-5">
    <h1 style="font-size: 1.5rem;">Create new Venue</h1>

    <EditForm Model="venue" OnValidSubmit="CreateVenueAsync" class="createForm" >
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="custom-file">
            <label class="custom-file-label" for="logo">Upload Logo</label>
            <InputFile class="custom-file-input" OnChange="OnLogoSelected" />
        </div>

        <div class="custom-file">
            <label class="custom-file-label" for="name">Name</label>
            <InputText id="name" class="form-control" @bind-Value="venue.Name" />
            <ValidationMessage For="@(() => venue.Name)" />
        </div>

        <div class="custom-file">
            <label class="custom-file-label" for="address">Address</label>
            <InputText id="address" class="form-control" @bind-Value="venue.Address" />
            <ValidationMessage For="@(() => venue.Address)" />
        </div>

        <div class="custom-file">
            <label class="custom-file-label" for="description">Description</label>
            <InputTextArea id="description" class="form-control" @bind-Value="venue.Description" />
            <ValidationMessage For="@(() => venue.Description)" />
        </div>

        <div class="custom-file">
            <label class="custom-file-label" for="contactNumber">Contact Number</label>
            <InputText id="contactNumber" class="form-control" @bind-Value="venue.ContactNumber" />
            <ValidationMessage For="@(() => venue.ContactNumber)" />
        </div>

        <div class="custom-file">
            <label class="custom-file-label" for="email">Email</label>
            <InputText id="email" class="form-control" @bind-Value="venue.Email" />
            <ValidationMessage For="@(() => venue.Email)" />
        </div>

        <div class="custom-file">
            <label class="custom-file-label" for="averagePrice">Average Price</label>
            <InputNumber id="averagePrice" class="form-control" @bind-Value="venue.AveragePrice" />
            <ValidationMessage For="@(() => venue.AveragePrice)" />
        </div>

        <div class="custom-file">
            <label class="custom-file-label" for="overallRating">Rating</label>
            <InputNumber id="overallRating" class="form-control" @bind-Value="venue.Rating" />
            <ValidationMessage For="@(() => venue.Rating)" />
        </div>

        

        <button type="submit" class="btn btn-primary">Create Venue</button>
    </EditForm>

    @* <form class="createForm">
    <div class="row custom-file">
    <label for="logo" class="custom-file-label">@FileName</label>
    <InputFile class="custom-file-input" OnChange="HandleFileChange" />
    </div>

    <div>
    <label for="Name">Venue Name:</label>
    <InputText @bind-Value="NewVenue.Name" class="form-control" />
    </div>

    <div>
    <label for="Email">Email:</label>
    <InputText @bind-Value="NewVenue.Email" class="form-control" />
    </div>

    <div>
    <label for="Address">Address:</label>
    <InputText @bind-Value="NewVenue.Address" class="form-control" />
    </div>

    <div>
    <label for="ContactNumber">Contact Number:</label>
    <InputText @bind-Value="NewVenue.ContactNumber" class="form-control" />
    </div>

    <div>
    <label for="AveragePrice">Average Price:</label>
    <InputNumber @bind-Value="NewVenue.AveragePrice" class="form-control" />
    </div>

    <div>
    <label for="Description">Description:</label>
    <InputTextArea @bind-Value="NewVenue.Description" class="form-control" />
    </div>

    <button type="button" @onclick="CreateVenue" class="btn btn-primary">Add Venue</button>
    </form> *@
</div>

<style>
    .createForm {
        margin: 15px auto;
    }

    .createForm div {
        margin: 15px;
    }

    .createForm .row {
        height: 45px;
        margin-bottom: 15px;
        position: relative;
    }

    .createForm div label {
        display: block;
        margin-bottom: 5px;
        font-weight: bold;
    }

    .createForm div input[type="text"],
    .createForm div input[type="number"],
    .createForm div textarea {
        width: 100%;
        padding: 8px;
        box-sizing: border-box;
        border: 1px solid #ccc;
        border-radius: 4px;
    }

    .createForm button {
        background-color: #5cb85c;
        color: white;
        border: none;
        padding: 10px 15px;
        border-radius: 4px;
        cursor: pointer;
    }

    .createForm button:hover {
        background-color: #4cae4c;
    }
</style>
